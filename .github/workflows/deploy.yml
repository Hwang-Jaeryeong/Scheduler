name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Decode Firebase key and save it
        run: |
          echo "${{ secrets.FIREBASE_KEY }}" | base64 --decode > ./firebase-key.json
          cp ./firebase-key.json ./dist/firebase-key.json
        shell: bash

      - name: Decode ENV_VARS and apply to .env
        run: |
          echo "${{ secrets.ENV_VARS }}" | base64 --decode > .env
        shell: bash

      - name: Create SSH key for EC2
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > ec2-key.pem
          chmod 600 ec2-key.pem

      - name: Add EC2 to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts || echo "Host key scan failed"
        shell: bash

      - name: Test SSH connection
        run: |
          ssh -i ec2-key.pem ubuntu@${{ secrets.EC2_HOST }} echo "SSH connection successful!"
        shell: bash

      - name: Prepare EC2 environment
        run: |
          ssh -i ec2-key.pem ubuntu@${{ secrets.EC2_HOST }} << EOF
          sudo apt update
          sudo apt install -y ca-certificates curl gnupg
          sudo mkdir -m 0755 -p /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo tee /etc/apt/keyrings/docker.asc > /dev/null
          echo "deb [arch=\$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \$(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt update
          sudo apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
          sudo usermod -aG docker ubuntu
          if [ ! -d "/home/ubuntu/Scheduler" ]; then
            git clone https://github.com/Hwang-Jaeryeong/Scheduler.git /home/ubuntu/Scheduler
          fi
          EOF
        shell: bash

      - name: Disable EC2 Nginx
        run: |
          ssh -i ec2-key.pem ubuntu@${{ secrets.EC2_HOST }} << EOF
          sudo systemctl stop nginx
          sudo systemctl disable nginx
          EOF
        shell: bash

      - name: Deploy using Docker Compose
        run: |
          ssh -i ec2-key.pem ubuntu@${{ secrets.EC2_HOST }} << EOF
          cd /home/ubuntu/Scheduler
          git pull origin main
          
          # ✅ 기존 컨테이너 종료 및 삭제
          sudo docker-compose down
          
          # ✅ Firebase Key와 .env 확인
          ls -la /home/ubuntu/Scheduler
          cat /home/ubuntu/Scheduler/.env
          cat /home/ubuntu/Scheduler/firebase-key.json
          
          # ✅ Docker Compose 실행
          sudo docker-compose up --build -d
          
          # ✅ 컨테이너 내부에서 Firebase 환경 변수 확인
          sudo docker exec -it scheduler_app_1 sh -c "ls -la /app"
          sudo docker exec -it scheduler_app_1 sh -c "cat /app/firebase-key.json"
          sudo docker exec -it scheduler_app_1 sh -c "env | grep FIREBASE"
          EOF
        shell: bash